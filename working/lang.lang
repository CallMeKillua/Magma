text = [ ( a..z | A..Z) ]

whitespace : {
    char = '\t' | '\n' | ' ';
} = [ char ];

name = text;

expression : {
    string = '\'' text '\'';
    range : {
        start = text;
        end = text;
    } = start '..' end;

    or = expression
        whitespace? '|'
        whitespace? expression;

    and = expression whitespace expression;

    quantity = '(' whitespace? expression whitespace? ')';

    optional = expression "?";

    list : {
        delimiter = '/' whitespace? expression
    }= '['
        whitespace? expression
        (whitespace delimiter)?
        whitespace? ']';

    field = name '.' name;
} = and | field | list
    | name | optional
    | or | quantity
    | range | string;

rule : {
    properties = ':' statement-blocks
} = name
    (whitespace properties)?
    whitespace? '='
    whitespace? expression
    whitespace? ';';

module = 'mod'
    whitespace name
    whitespace? statement-blocks;

statement = rule | module;
statements = whitespace? [ statement / whitespace ] whitespace?;
statement-blocks = '{' statements '}';
_ = statements;